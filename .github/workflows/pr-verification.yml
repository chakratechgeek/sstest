name: PR Verification

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  find-changed-terraform-modules:
    name: Find Changed Terraform Modules
    runs-on: ubuntu-latest
    outputs:
      tf_dirs: ${{ steps.set-tf-dirs.outputs.tf_dirs }}
    steps:
      - uses: actions/checkout@v4

      - name: List changed .tf files and extract their folders
        id: changed-dirs
        run: |
          git fetch origin ${{ github.base_ref }}
          # 1. List all files changed in the PR, filter only .tf
          git diff --name-only origin/${{ github.base_ref }} ${{ github.sha }} \
            | grep '\.tf$' \
            | xargs -n1 dirname \
            | sort -u \
            > changed_tf_dirs.txt

      - name: Read and export TF dirs as JSON array
        id: set-tf-dirs
        run: |
          mapfile -t tf_dirs < changed_tf_dirs.txt

          if [ ${#tf_dirs[@]} -eq 0 ]; then
            tf_dirs_json='[]'
          else
            # compact JSON array: ["dir1","dir2/submod",...]
            tf_dirs_json=$(jq -c -n '$ARGS.positional' --args "${tf_dirs[@]}")
          fi

          echo "tf_dirs=$tf_dirs_json" >> "$GITHUB_OUTPUT"

  terraform-plan:
    name: Terraform Plan
    needs: find-changed-terraform-modules
    if: needs.find-changed-terraform-modules.outputs.tf_dirs != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir: ${{ fromJson(needs.find-changed-terraform-modules.outputs.tf_dirs) }}

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ matrix.dir }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ${{ matrix.dir }}

      - name: Terraform Plan
        run: terraform plan -out=plan.out
        working-directory: ${{ matrix.dir }}

  finalize-pr-verification:
    name: PR Verification
    needs:
      - find-changed-terraform-modules
      - terraform-plan
    runs-on: ubuntu-latest
    if: always()
    steps:
      - run: echo "âœ… PR validation complete"
