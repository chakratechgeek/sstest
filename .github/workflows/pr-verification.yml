name: PR Validation (Changed Terraform + Python Output Comment)

on:
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  find-changed-terraform:
    name: Find changed Terraform dirs
    runs-on: ubuntu-latest
    outputs:
      tf_dirs: ${{ steps.set-dirs.outputs.tf_dirs }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # needed to diff base vs head

      - name: Ensure jq
        run: |
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update && sudo apt-get install -y jq
          fi

      - name: Compute changed Terraform directories
        id: set-dirs
        shell: bash
        run: |
          BASE_SHA="${{ github.event.pull_request.base.sha }}"
          HEAD_SHA="${{ github.event.pull_request.head.sha }}"

          mapfile -t tf_dirs < <(
            git diff --name-only --diff-filter=ACMR "$BASE_SHA" "$HEAD_SHA" \
            | grep -E '(\.tf$|\.tfvars(\.json)?$|\.terraform\.lock\.hcl$)' \
            | xargs -n1 dirname \
            | sort -u
          )

          echo "Changed Terraform dirs:"
          printf ' - %s\n' "${tf_dirs[@]:-<none>}"

          if [ ${#tf_dirs[@]} -eq 0 ]; then
            echo "tf_dirs=[]" >> "$GITHUB_OUTPUT"
          else
            tf_dirs_json=$(jq -c -n '$ARGS.positional' --args "${tf_dirs[@]}")
            echo "tf_dirs=$tf_dirs_json" >> "$GITHUB_OUTPUT"
          fi

  plan-and-check:
    name: Terraform plan & run check.py (per dir)
    needs: find-changed-terraform
    if: needs.find-changed-terraform.outputs.tf_dirs != '[]'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        dir: ${{ fromJson(needs.find-changed-terraform.outputs.tf_dirs) }}
    env:
      AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION:    ${{ secrets.AWS_DEFAULT_REGION }}
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python deps (optional)
        shell: bash
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi

      - name: Terraform init
        working-directory: ${{ matrix.dir }}
        run: terraform init -input=false

      - name: Terraform validate
        working-directory: ${{ matrix.dir }}
        run: terraform validate

      - name: Terraform plan
        working-directory: ${{ matrix.dir }}
        run: terraform plan -input=false -no-color -out=plan.out

      - name: Generate plan.json
        working-directory: ${{ matrix.dir }}
        run: terraform show -json plan.out > plan.json

      - name: Run check.py and capture output
        id: run-check
        working-directory: ${{ matrix.dir }}
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p "$GITHUB_WORKSPACE/outputs"
          # Sanitize dir name for filename
          SANITIZED_DIR="$(echo '${{ matrix.dir }}' | sed 's/[^A-Za-z0-9_.-]/_/g')"
          # Run python and capture stdout
          python "$GITHUB_WORKSPACE/check.py" plan.json | tee "$GITHUB_WORKSPACE/outputs/${SANITIZED_DIR}.md"
          # Prepend a header so we know which directory the output belongs to
          sed -i "1i ## Directory: \`${{ matrix.dir }}\`\n" "$GITHUB_WORKSPACE/outputs/${SANITIZED_DIR}.md"

      - name: Upload per-dir output
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: check-outputs-${{ strategy.job-index }}-${{ github.run_attempt }}  # unique name per matrix job
          path: outputs/*.md

  aggregate-and-comment:
    name: Aggregate outputs & comment on PR
    needs: [find-changed-terraform, plan-and-check]
    if: needs.find-changed-terraform.outputs.tf_dirs != '[]'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: check-outputs-*  # download all artifacts matching this pattern
          path: collected
          merge-multiple: true      # merge all artifacts into one directory

      - name: Build combined comment
        id: build
        shell: bash
        run: |
          echo "## Terraform Checks (Python Output)" > combined.md
          echo "" >> combined.md
          if ls collected/*.md >/dev/null 2>&1; then
            for f in collected/*.md; do
              echo "---" >> combined.md
              cat "$f" >> combined.md
              echo "" >> combined.md
            done
          else
            echo "_No outputs produced._" >> combined.md
          fi

      - name: Find existing comment (to update)
        id: find-comment
        uses: peter-evans/find-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: github-actions[bot]
          body-includes: "## Terraform Checks (Python Output)"

      - name: Create or update PR comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ github.token }}  # same-repo PRs
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          edit-mode: replace
          body-path: combined.md

  summary:
    name: PR Validation summary
    needs: [find-changed-terraform, plan-and-check, aggregate-and-comment]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "âœ… PR validation complete"
          echo "Changed Terraform dirs: ${{ needs.find-changed-terraform.outputs.tf_dirs }}"
          echo "Plan job result: ${{ needs.plan-and-check.result }}"
